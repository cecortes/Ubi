<?xml version="1.0"?>
<doc>
<assembly>
<name>
UbiDll
</name>
</assembly>
<members>
<member name="T:UbiDll.My.Resources.Resources">
<summary>
  Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
</summary>
</member>
<member name="P:UbiDll.My.Resources.Resources.ResourceManager">
<summary>
  Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
</summary>
</member>
<member name="P:UbiDll.My.Resources.Resources.Culture">
<summary>
  Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
  búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
</summary>
</member>
<member name="F:UbiDll.Conexion._cadena">
 En esta región se declaran variables de la clase, las cuales se les
 llama Data Members.
</member>
<member name="M:UbiDll.Conexion.Con_Global">
 En esta región se implementan las funciones compartidas de la clase,
 si la función no es compartida o pública, esta no podrá ser usada por
 la aplicación que la llame aunque esté correctamente importada.
</member>
<member name="M:UbiDll.Consulta.GetPass(UbiDll.Datos)">
 <summary>
 Se encarga de obtener el Pass de la tabla y lo regresa como resultado
 </summary>
 <param name="Datos"></param>
 <returns>Password as string</returns>
</member>
<member name="M:UbiDll.Consulta.GetAllUsr">
 <summary>
 Se encarga de consultar la tabala de usuarios y llenar el DGV con el resultado
 </summary>
 <param name="datos"></param>
</member>
<member name="M:UbiDll.Consulta.GetTotDepa(UbiDll.Datos)">
 <summary>
 Consulta la tabla departamentos
 Obtiene el Total_depa y lo devuelve como entero
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Consulta.GetAllDepa">
 <summary>
 Se encarga de consultar a departamentos y llenar al cbo correspondiente con el Id_depa
 </summary>
</member>
<member name="M:UbiDll.Consulta.GetAllCli">
 <summary>
 Se encarga de consultar la tabla de clientes y llenar el DGV con el resultado
 </summary>
</member>
<member name="M:UbiDll.Consulta.GetAllRfc">
 <summary>
 Se encarga de consultar a clientes y llenar al cbo correspondiente con el rfc_cli
 </summary>
</member>
<member name="M:UbiDll.Consulta.GetCli(UbiDll.Datos)">
 <summary>
 Se encarga de obtener los datos de un cliente en particular y regresarlo como datos
 </summary>
 <param name="Datos"></param>
 <returns>Resultado como objeto de Datos</returns>
</member>
<member name="M:UbiDll.Consulta.GetAllProv">
 <summary>
 Se encarga de consultar a proveedores y llenar al cbo correspondiente con el razon_prov
 </summary>
</member>
<member name="M:UbiDll.Consulta.GetUniProd">
 <summary>
 Se encarga de consultar a prod_uni y llenar al cbo correspondiente con el tipo_uni
 </summary>
</member>
<member name="M:UbiDll.Consulta.GetCatProd">
 <summary>
 Se encarga de consultar a productos y llenar al cbo correspondiente con el cat_prod
 </summary>
</member>
<member name="M:UbiDll.Consulta.GetNomProd">
 <summary>
 Se encarga de consultar a productos y llenar al cbo correspondiente con el nom_prod
 </summary>
</member>
<member name="M:UbiDll.Consulta.GetProd(UbiDll.Datos)">
 <summary>
 Se encarga de obtener los datos de un producto en particular y regresarlo como datos
 </summary>
 <param name="Datos"></param>
 <returns>Resultado como objeto de Datos</returns>
</member>
<member name="M:UbiDll.Consulta.GetLastId">
 <summary>
 Se encarga de obtener el último id de la tabla y lo regresa como resultado
 </summary>
 <returns>Password as string</returns>
</member>
<member name="M:UbiDll.Consulta.GetAllMaq">
 <summary>
 Se encarga de consultar la tabla de maquinaria y llenar el DGV con el resultado
 </summary>
</member>
<member name="M:UbiDll.Consulta.DgvAllMaq">
 <summary>
 Crea una tabla harcode en el dataset
 Crea las columnas del tipo ncesario para los datos
 Realiza una consulta para obtener los datos de la tabla maquinaria
 Mediante un reader almacena los datos
 Genera una nueva fila en el dataset con todos los datos
 </summary>
</member>
<member name="M:UbiDll.Consulta.GetMaqRfid(UbiDll.Datos)">
 <summary>
 Se encarga de obtener los datos de una maquinaria en particular y regresarlo como datos
 </summary>
 <param name="Datos"></param>
 <returns>Resultado como objeto de Datos</returns>
</member>
<member name="M:UbiDll.Consulta.GetAutoTipos">
 <summary>
 Se encarga de consultar a auto_tipos y llenar al cbo correspondiente con el idauto_tipos
 </summary>
</member>
<member name="M:UbiDll.Consulta.DgvAllAutos">
 <summary>
 Crea una tabla harcode en el dataset
 Crea las columnas del tipo ncesario para los datos
 Realiza una consulta para obtener los datos de la tabla autos
 Mediante un reader almacena los datos
 Genera una nueva fila en el dataset con todos los datos
 </summary>
</member>
<member name="M:UbiDll.Consulta.GetAutoRfid(UbiDll.Datos)">
 <summary>
 Se encarga de obtener los datos de un vehículo en particular y regresarlo como datos
 </summary>
 <param name="Datos"></param>
 <returns>Resultado como objeto de Datos</returns>
</member>
<member name="M:UbiDll.Consulta.GetInvCat">
 <summary>
 Se encarga de consultar a inventario_cat y llenar al cbo correspondiente con el cat_inventario
 </summary>
</member>
<member name="M:UbiDll.Consulta.DgvAllInv">
 <summary>
 Crea una tabla harcode en el dataset
 Crea las columnas del tipo ncesario para los datos
 Realiza una consulta para obtener los datos de la tabla autos
 Mediante un reader almacena los datos
 Genera una nueva fila en el dataset con todos los datos
 </summary>
</member>
<member name="M:UbiDll.Consulta.GetInvRfid(UbiDll.Datos)">
 <summary>
 Se encarga de obtener los datos de un inventario en particular y regresarlo como datos
 </summary>
 <param name="Datos"></param>
 <returns>Resultado como objeto de Datos</returns>
</member>
<member name="M:UbiDll.Consulta.ChkPrimaKey(UbiDll.Datos)">
 <summary>
 Consulta la tabla prima
 Obtiene el prima_nombre
 Si existe devuelve false
 Si no existe devuelve true
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Consulta.DgvAllPrima">
 <summary>
 Crea una tabla harcode en el dataset
 Crea las columnas del tipo ncesario para los datos
 Realiza una consulta para obtener los datos de la tabla prima
 Mediante un reader almacena los datos
 Genera una nueva fila en el dataset con todos los datos
 </summary>
</member>
<member name="M:UbiDll.Consulta.GetPrimaRfid(UbiDll.Datos)">
 <summary>
 Se encarga de obtener los datos de una materia prima en particular y regresarlo como datos
 </summary>
 <param name="Datos"></param>
 <returns>Resultado como objeto de Datos</returns>
</member>
<member name="M:UbiDll.Consulta.DgvAllCtaPropia">
 <summary>
 Crea una tabla harcode en el dataset
 Crea las columnas del tipo ncesario para los datos
 Realiza una consulta para obtener los datos de la tabla ctapropia
 Mediante un reader almacena los datos
 Genera una nueva fila en el dataset con todos los datos
 </summary>
</member>
<member name="M:UbiDll.Consulta.DgvAllCtaExt">
 <summary>
 Crea una tabla harcode en el dataset
 Crea las columnas del tipo necesario para los datos
 Realiza una consulta para obtener los datos de la tabla ctasexterna
 Mediante un reader almacena los datos
 Genera una nueva fila en el dataset con todos los datos
 </summary>
</member>
<member name="M:UbiDll.Consulta.GetExtProv(UbiDll.Datos)">
 <summary>
 Se encarga de obtener los datos de una cuenta externa en particular y regresarlo como datos
 </summary>
 <param name="Datos"></param>
 <returns>Resultado como objeto de Datos</returns>
</member>
<member name="M:UbiDll.Consulta.DgvCtaExt(UbiDll.Datos)">
 <summary>
 Crea una tabla harcode en el dataset
 Crea las columnas del tipo necesario para los datos
 Realiza una consulta para obtener los datos de la tabla ctasexterna
 Mediante un reader almacena los datos
 Genera una nueva fila en el dataset con todos los datos
 </summary>
</member>
<member name="M:UbiDll.Consulta.GetFolioVta">
 <summary>
 *****************************************
 *** SOLO VALORES DISTINTOS DE FOLIOS ****
 *****************************************
 Se encarga de consultar a ventas y llenar al cbo correspondiente con ventas_folio
 </summary>
</member>
<member name="M:UbiDll.Consulta.GetVtaDetail(UbiDll.Datos)">
 <summary>
 Se encarga de obtener los datos de un folio de venta en particular y regresarlo como datos
 </summary>
 <param name="Datos"></param>
 <returns>Resultado como objeto de Datos</returns>
</member>
<member name="M:UbiDll.Consulta.GetAllVta(UbiDll.Datos)">
 <summary>
 Se encarga de consultar la tabla de ventas y llenar el DGV con el resultado
 </summary>
</member>
<member name="M:UbiDll.Consulta.GetPerVtas(UbiDll.Datos)">
 <summary>
 Crea una tabla harcode en el dataset
 Crea las columnas del tipo necesario para los datos
 Realiza una consulta para obtener los datos de la tabla ventas
 Mediante un reader almacena los datos
 Genera una nueva fila en el dataset con todos los datos
 </summary>
</member>
<member name="M:UbiDll.Consulta.GetCliVtas(UbiDll.Datos)">
 <summary>
 Crea una tabla harcode en el dataset
 Crea las columnas del tipo necesario para los datos
 Realiza una consulta para obtener los datos de la tabla ventas
 Mediante un reader almacena los datos
 Genera una nueva fila en el dataset con todos los datos
 </summary>
</member>
<member name="M:UbiDll.Agregar.NewUsr(UbiDll.Datos)">
 <summary>
 Realiza la inserción de datos en la tabla usuarios
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Agregar.NewClient(UbiDll.Datos)">
 <summary>
 Realiza la inserción de datos en la tabla clientes
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Agregar.NewProd(UbiDll.Datos)">
 <summary>
 Realiza la inserción de datos en la tabla productos
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Agregar.NewMaq(UbiDll.Datos)">
 <summary>
 Realiza la inserción de datos en la tabla maquinaria
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Agregar.NewAuto(UbiDll.Datos)">
 <summary>
 Realiza la inserción de datos en la tabla autos
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Agregar.NewInv(UbiDll.Datos)">
 <summary>
 Realiza la inserción de datos en la tabla inventario
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Agregar.NewPrima(UbiDll.Datos)">
 <summary>
 Realiza la inserción de datos en la tabla prima
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Agregar.NewPropia(UbiDll.Datos)">
 <summary>
 Realiza la inserción de datos en la tabla ctapropia
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Agregar.NewExt(UbiDll.Datos)">
 <summary>
 Realiza la inserción de datos en la tabla ctasexterna
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Agregar.NewVenta(UbiDll.Datos)">
 <summary>
 Realiza la inserción de datos en la tabla ventas
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Actualizar.UpdUsr(UbiDll.Datos)">
 <summary>
 Actualiza los datos de la tabla de usuarios por medio de la llave primaria correo_usr
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Actualizar.UpdTotDepa(UbiDll.Datos)">
 <summary>
 Actualiza el total en Total_depa de la tabla departamentos
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Actualizar.UpdDepaFromTo(System.String,System.String,System.String)">
 <summary>
 Actualiza en -1 el Total_depa de la tabla departamentos depaFrom
 Actualiza en +1 el Total_depa de la tabla departamentos depaTo
 </summary>
 <param name="depaFrom"></param>
 <param name="depaTo"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Actualizar.UpdDepaFromDel(System.String)">
 <summary>
 Actualiza en -1 el Total_depa de la tabla departamentos depaDel
 </summary>
 <param name="depaDel"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Actualizar.UpdCli(UbiDll.Datos)">
 <summary>
 Actualiza los datos de la tabla de clientes por medio de la llave primaria rfc_cli
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Actualizar.UpdProd(UbiDll.Datos)">
 <summary>
 Actualiza los datos de la tabla de productos por medio de la llave primaria nom_prod
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Actualizar.UpdMaq(UbiDll.Datos)">
 <summary>
 Realiza la actualización de datos en la tabla maquinaria
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Actualizar.UpdAuto(UbiDll.Datos)">
 <summary>
 Realiza la actualización de datos en la tabla autos
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Actualizar.UpdInv(UbiDll.Datos)">
 <summary>
 Realiza la actualización de datos en la tabla inventario
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Actualizar.UpdPrima(UbiDll.Datos)">
 <summary>
 Realiza la actualización de datos en la tabla prima
 </summary>
 <param name="datos"></param>
 <returns></returns>
</member>
<member name="M:UbiDll.Eliminar.DelUsr(UbiDll.Datos)">
 <summary>
 Se encarga de eliminar al usuario por medio de la key recibida como parámetro
 </summary>
 <param name="datos"> Resultado del borrado </param>
 <returns></returns>
</member>
<member name="M:UbiDll.Eliminar.DelCli(UbiDll.Datos)">
 <summary>
 Se encarga de eliminar al cliente por medio de la key recibida como parámetro
 </summary>
 <param name="datos"> Resultado del borrado </param>
 <returns></returns>
</member>
<member name="M:UbiDll.Eliminar.DelProd(UbiDll.Datos)">
 <summary>
 Se encarga de eliminar al producto por medio de la key recibida como parámetro
 </summary>
 <param name="datos"> Resultado del borrado </param>
 <returns></returns>
</member>
<member name="M:UbiDll.Eliminar.DelMaq(UbiDll.Datos)">
 <summary>
 Se encarga de eliminar a la maquinaria por medio de la key recibida como parámetro
 </summary>
 <param name="datos"> Resultado del borrado </param>
 <returns></returns>
</member>
<member name="M:UbiDll.Eliminar.DelAuto(UbiDll.Datos)">
 <summary>
 Se encarga de eliminar al vehículo por medio de la key recibida como parámetro
 </summary>
 <param name="datos"> Resultado del borrado </param>
 <returns></returns>
</member>
<member name="M:UbiDll.Eliminar.DelInv(UbiDll.Datos)">
 <summary>
 Se encarga de eliminar al inventario por medio de la key recibida como parámetro
 </summary>
 <param name="datos"> Resultado del borrado </param>
 <returns></returns>
</member>
<member name="M:UbiDll.Eliminar.DelPrima(UbiDll.Datos)">
 <summary>
 Se encarga de eliminar a la materia prima por medio de la key recibida como parámetro
 </summary>
 <param name="datos"> Resultado del borrado </param>
 <returns></returns>
</member>
<member name="M:UbiDll.Eliminar.DelPropia(UbiDll.Datos)">
 <summary>
 Se encarga de eliminar a la cuenta propia por medio de la key recibida como parámetro
 </summary>
 <param name="datos"> Resultado del borrado </param>
 <returns></returns>
</member>
<member name="M:UbiDll.Eliminar.DelExt(UbiDll.Datos)">
 <summary>
 Se encarga de eliminar a la cuenta propia por medio de la key recibida como parámetro
 </summary>
 <param name="datos"> Resultado del borrado </param>
 <returns></returns>
</member>
<member name="M:UbiDll.Eliminar.DelFolio(UbiDll.Datos)">
 <summary>
 Se encarga de eliminar al folio por medio de la key recibida como parámetro
 </summary>
 <param name="datos"> Resultado del borrado </param>
 <returns></returns>
</member>
<member name="M:UbiDll.ErrorMsg.ErrorCode(System.Int32)">
 <summary>
 Se encarga de mostrar al usuario el mensaje de acuerdo al tipo de error
 Recibe como parámetro el tipo y lo valida para mostrar el mensaje adecuado
 </summary>
 <param name="tipo">As integer error type</param>
</member>
</members>
</doc>
